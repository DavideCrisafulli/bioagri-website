/*
 * MIT License
 *
 * Copyright (c) 2020 BioAgri S.r.l.s.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

import org.apache.tools.ant.taskdefs.condition.Os


plugins {
    id 'idea'
    id 'base'
}

group 'it.bioagri'
version '0.0.1'


repositories {
    mavenCentral()
}

dependencies {

}



task sass {

    group = 'sass'
    description = 'Build .scss files'

    if(Os.isFamily(Os.FAMILY_WINDOWS)) {
        Runtime.runtime.exec('cmd.exe npm install', null, rootProject.projectDir);
        Runtime.runtime.exec('cmd.exe npm run sass', null, rootProject.projectDir);
    } else {
        Runtime.runtime.exec('npm install && npm run sass', null, rootProject.projectDir);
    }

}

task watch {

    group = 'sass'
    description = 'Watch .scss changes'

    if(Os.isFamily(Os.FAMILY_WINDOWS)) {
        Runtime.runtime.exec('cmd.exe npm install', null, rootProject.projectDir);
        Runtime.runtime.exec('cmd.exe npm run sass', null, rootProject.projectDir);
    } else {
        Runtime.runtime.exec('npm install && npm run sass', null, rootProject.projectDir);
    }

}


task prepare(type: Delete) {

    group = 'webapp'
    description = 'Clean webapp'

    delete "${project(":back-end").projectDir}/src/main/webapp"
}

task run(type: Copy) {

    group = 'webapp'
    description = 'Run webapp'

    from('src/main/webapp') {
        exclude '**/*.scss'
    }

    includeEmptyDirs = false

    into "${project(":back-end").projectDir}/src/main/webapp"

}

run.dependsOn(project(":front-end").tasks.prepare)
run.dependsOn(project(":front-end").tasks.sass)
run.finalizedBy(project(":back-end").tasks.bootRun)